@mixin font-face($family, $file, $weight: normal, $style: normal) {
  @font-face {
    font-family: $family;
    src: url('fonts/#{$file}.eot');
    src: url('fonts/#{$file}.eot?#iefix') format('embedded-opentype'),
      url('fonts/#{$file}.woff') format('woff'),
      url('fonts/#{$file}.ttf')  format('truetype'),
      url('fonts/#{$file}.svg#svgFontName') format('svg');
    font-weight: $weight;
    font-style: $style;
  }
}

@mixin img-high-dpi($image, $ext, $width, $height) {
  background-image: image-url('#{$image}.#{$ext}');
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
    only screen and (min--moz-device-pixel-ratio: 2),
    only screen and (-o-min-device-pixel-ratio: 2/1),
    only screen and (min-device-pixel-ratio: 2),
    only screen and (min-resolution: 192dpi),
    only screen and (min-resolution: 2dppx) {
    background-image: image-url('#{$image}@2x.#{$ext}');
    background-size: cover;
  }
}
@mixin tab-focus() {
  // Default
  outline: thin dotted;
  // WebKit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

@mixin size($width, $height: $width) {
  width: $width;
  height: $height;
}

// Animated Headlines
@mixin center($xy:xy) {
  @if $xy == xy {
    top: 50%;
    right: auto;
    bottom: auto;
    left: 50%;
    transform: translateX(-50%) translateY(-50%);
  }
  @else if $xy == x {
    right: auto;
    left: 50%;
    transform: translateX(-50%);
  }
  @else if $xy == y {
    top: 50%;
    bottom: auto;
    transform: translateY(-50%);
  }
}
